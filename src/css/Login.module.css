.body {
    width: 100%;
    height: 100vh;
    overflow: hidden;
    background: linear-gradient(to bottom right, red, blue);
}

.content {
    position: relative;
    top: 30%;
    height: 520px;


}

.img {
    position: absolute;
    height: 60px;
    width: 60px;
    left: 50%;
    padding: 20px;
    transform: translateX(-50%);
    border-radius: 50%;
    background-color: rgb(87, 87, 175);
    z-index: 1;
}

.contentForm {
    background-image: linear-gradient(to bottom right, rgb(235, 229, 229), rgb(126, 126, 241));

    max-width: 600px;
    height: 400px;
    margin: 0 auto;
    position: relative;
    top: 5%;
    border-radius: 10px;
    padding: 5px;
    justify-content: center;
    padding-top: 50px;
    box-shadow: 0 20px 4px rgba(0, 0, 0, 0.2);
}

.input {

    display: inline-block;
    width: 200px;
    height: 20px;
    border: none;
    outline: 2px solid blue;
    border-radius: 20px;
    padding-left: 10px;
    margin: 10px;


}

.input_div {

    position: relative;
    margin-top: 20%;

    


}



.button {
    width: 200px;
    height: 30px;
    text-align: center;
    margin: 0 auto;
    position: relative;
    top: 20.5%;
    background: linear-gradient(to bottom, rgba(68, 80, 88, 0.8), rgb(126, 126, 241));
    z-index: 1;
    border: none;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;

}

.button:hover {
    background: linear-gradient(to bottom, rgb(126, 126, 241), rgb(126, 126, 241));
    box-shadow: 0 20px 4px rgba(0, 0, 0, 0.2);
}

.imgLog {
    width: 20px;
    height: 20px;
    display: inline-block;
    margin: 10px;


}

.usernameidv {
    display: flex;
    flex-wrap: wrap;
    text-align: center;
    justify-content: center;
}


/* relative تعنى بُعد العنصر عن مكانة الأصلي مثال على ذلك: */
/*
In CSS, the z-index property controls the stacking order of positioned elements that overlap each other.
 Elements with a higher z-index value will appear in front of elements with a lower z-index value,
  and elements with the same z-index value will be stacked according to their order in the HTML markup.
A z-index value of 1 sets the element to the lowest position in the stacking order.
 Higher values increase the position of the element in the stacking order, so a z-index value of 2 will place the element above those with a value of 1,
  and so on.


flexbox
وإذا أردنا الاستفادة من مميزات ال flexbox فإننا نضع display: flex; للعنصر الاب ثم نستخدم باقيالاكواد التي بالأسفل.



*/